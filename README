# WJetsNPCorrectionsRun2



## -- Overview
The goal of this code is to compute the non-perturbative (NP) corrections, i.e. the effects of hadronization/fragmentation and multi-parton interactions in the simulation, that are applied multiplicatively to fixed-order calculations (for each bin) in order to bring these distributions to particle-level, for comparison with unfolded data. 

This is done by re-running the Pythia8HadronizerFilter CMSSW module on top of the LHEEventProduct content of an LHE-tier dataset, which in our case is a Madgraph simulation of W(lnu)+Jets with LO MLM precision up until the 4th jet:
/WJetsToLNu_TuneCUETP8M1_13TeV-madgraphMLM-pythia8/RunIIWinter15wmLHE-MCRUN2_71_V1_ext1-v1/LHE

The LHEEventProduct should contain only parton-level information, so it should be sufficient to use these events for deriving NP corrections for all years in the Run 2 analysis, since the main difference in simulation among years is the default PDF set and tune used by Pythia8.

Instructions for running locally in-shell, as well as submissions using CRAB, are given below. The output files are in the YODA format, so all of the associated Rivet-YODA tools should be sufficient for making plots/deriving corrections/etc. (For possible future use, the files in "forTurningFSROff" can be used for looking at effects of turning final state radiation (FSR) off.

## NOTE:
For the full Run 2 analysis, I will import my Rivet analysis used for FastNLO tables to here. This compiles with Rivet v2.5.4 and gcc v4.8.1. We can either try CMSSW_9_4_14_UL_patch1 (slc7_amd64_gcc630) or CMSSW_10_2_20_UL (slc7_amd64_gcc700), which both have Rivet v2.5.4.



## -- Setup
mkdir NonPerturbativeCorrections
cd NonPerturbativeCorrections
git clone git@github.com:awisecar/WJetsNPCorrectionsRun2.git
cd WJetsNPCorrectionsRun2
cmsrel CMSSW_10_2_20_UL
cd CMSSW_10_2_20_UL/src
cmsenv
git cms-addpkg GeneratorInterface/RivetInterface
scram b -j 8

## Next thing to do is to find a recent valid CMSSW fragment with the Pythia8 module in it
## To see the instructions about the gen fragments and cmsDriver.py commands used to generate
## the CMSSW cfg files, see notes.txt in the fragmentsRun2_WJetsLOMLMsamples folder

## Move CMSSW cfg files, CRAB cfg files inside CMSSW area
mv runPythia8AndRivetAnalysis_WJetsLOMLM*.py ./CMSSW_10_2_20_UL/src
mv crab_RunPythiaAndRivet_WJetsLOMLM_*.py    ./CMSSW_10_2_20_UL/src

## Move Rivet analysis files into appropriate folders
## First the .cc file; then the others (.info, .plot, .yoda)
mv CMS_SMP_WJetsAlphaS_Run2_NPCorrections.cc ./CMSSW_10_2_20_UL/src/GeneratorInterface/RivetInterface/src
mv CMS_SMP_WJetsAlphaS_Run2_NPCorrections.*  ./CMSSW_10_2_20_UL/src/GeneratorInterface/RivetInterface/data
cd CMSSW_10_2_20_UL/src
scram b -j 8
rivet --list-analyses



## -- Run code

## ========== Option 1: Test locally ========== 
cd ./CMSSW_10_2_20_UL/src
cmsenv
cmsvoms
scram b -j 8
cmsRun runPythia8AndRivetAnalysis_WJetsLOMLM_2016.py
 -- or -- 
cmsRun runPythia8AndRivetAnalysis_WJetsLOMLM_HadMpiOFF_2016.py
then
rivet-mkhtml --outputdir=<output-dir-name> --mc-errs <output-file-1>.yoda <output-file-2>.yoda 

## ========== Option 2: Run in CRAB ===========
## Note: First make sure you make an output directory listed in the CRAB cfg file for job output on EOS, such as,
## /eos/cms/store/user/awisecar/NPCorrections2016_MadgraphLO

## Then to run jobs --
cd ./CMSSW_10_2_20_UL/src
cmsenv
cmsvoms
sourcecrab
scram b -j 8

# Submit using CRAB
crab submit -c crab_RunPythiaAndRivet_WJetsLOMLM_2016.py
crab submit -c crab_RunPythiaAndRivet_WJetsLOMLM_HadMpiOFF_2016.py

# To check progress, do:
crab status -d crab_2016_WJetsLOMLM_NonPertON
crab status -d crab_2016_WJetsLOMLM_NonPertOFF

## Then copy Yoda files to local directory, merge using runMergeYodaCrabDir.py utility (NOT YET TESTED!!!)

## Convert YODA file to ROOT file to derive NP corrections
-- try --
yoda2aida output.yoda
aida2root output.aida
-- or ---
yoda2root output.yoda


